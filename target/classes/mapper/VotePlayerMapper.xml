<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vote.demo.dao.VotePlayerMapper">
  <resultMap id="BaseResultMap" type="com.vote.demo.model.VotePlayer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="play_name" jdbcType="VARCHAR" property="playName" />
    <result column="play_img" jdbcType="VARCHAR" property="playImg" />
    <result column="vote_num" jdbcType="INTEGER" property="voteNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, play_name, play_img, vote_num, create_time
  </sql>
  <select id="selectByExample" parameterType="com.vote.demo.model.VotePlayerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vote_palyer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vote_palyer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vote_palyer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vote.demo.model.VotePlayer">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vote_palyer (play_name, play_img, vote_num,
      create_time)
    values (#{playName,jdbcType=VARCHAR}, #{playImg,jdbcType=VARCHAR}, #{voteNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.vote.demo.model.VotePlayer">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vote_palyer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="playName != null">
        play_name,
      </if>
      <if test="playImg != null">
        play_img,
      </if>
      <if test="voteNum != null">
        vote_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="playName != null">
        #{playName,jdbcType=VARCHAR},
      </if>
      <if test="playImg != null">
        #{playImg,jdbcType=VARCHAR},
      </if>
      <if test="voteNum != null">
        #{voteNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vote.demo.model.VotePlayer">
    update vote_palyer
    <set>
      <if test="playName != null">
        play_name = #{playName,jdbcType=VARCHAR},
      </if>
      <if test="playImg != null">
        play_img = #{playImg,jdbcType=VARCHAR},
      </if>
      <if test="voteNum != null">
        vote_num = #{voteNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vote.demo.model.VotePlayer">
    update vote_palyer
    set play_name = #{playName,jdbcType=VARCHAR},
      play_img = #{playImg,jdbcType=VARCHAR},
      vote_num = #{voteNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAll" resultType="java.util.Map">
    SELECT
        id,
        play_name playName,
        play_img playImg,
        vote_num voteNum,
        create_time createTime,
        update_time updateTime
    FROM
        vote_palyer
    ORDER BY
        voteNum DESC
  </select>

</mapper>